{"ast":null,"code":"import { UniformsLib, UniformsUtils, ShaderLib, ShaderMaterial } from \"three\";\nconst basicVertShader = /*glsl*/`\n#include <fog_pars_vertex>\n\n\nvoid main(){\n    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    #include <fog_vertex>\n}\n`;\nconst basicFragShader = /*glsl*/`\n#include <fog_pars_fragment>\n\nvoid main(){\n\n    gl_FragColor = vec4(color,1.0);\n    #include <fog_fragment>\n}   \n`;\nconst shaderPoint = ShaderLib.points;\nconst uniforms = UniformsUtils.merge([UniformsLib['fog'], UniformsUtils.clone(shaderPoint.uniforms)]);\nuniforms.scale.value = 350;\nconst BasicShaderMat = new ShaderMaterial({\n  uniforms: uniforms,\n  defines: {\n    USE_SIZEATTENUATION: \"\"\n  },\n  vertexShader: basicVertShader,\n  fragmentShader: basicFragShader,\n  fog: true,\n  transparent: true\n});\nexport { BasicShaderMat };","map":{"version":3,"names":["UniformsLib","UniformsUtils","ShaderLib","ShaderMaterial","basicVertShader","basicFragShader","shaderPoint","points","uniforms","merge","clone","scale","value","BasicShaderMat","defines","USE_SIZEATTENUATION","vertexShader","fragmentShader","fog","transparent"],"sources":["C:/Users/datpo/OneDrive/Documents/Proto Coop/ProtoWebsite/proto-website/src/World/Shaders/BasicShader.js"],"sourcesContent":["import { UniformsLib, UniformsUtils, ShaderLib, ShaderMaterial } from \"three\";\r\n\r\nconst basicVertShader = /*glsl*/`\r\n#include <fog_pars_vertex>\r\n\r\n\r\nvoid main(){\r\n    \r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    #include <fog_vertex>\r\n}\r\n`;\r\n\r\nconst basicFragShader = /*glsl*/`\r\n#include <fog_pars_fragment>\r\n\r\nvoid main(){\r\n\r\n    gl_FragColor = vec4(color,1.0);\r\n    #include <fog_fragment>\r\n}   \r\n`;\r\n\r\nconst shaderPoint = ShaderLib.points;\r\n\r\nconst uniforms = UniformsUtils.merge([UniformsLib['fog'], UniformsUtils.clone(shaderPoint.uniforms)]);\r\nuniforms.scale.value = 350;\r\nconst BasicShaderMat = new ShaderMaterial({\r\n    uniforms: uniforms,\r\n    defines: {\r\n        USE_SIZEATTENUATION: \"\"\r\n    },\r\n    vertexShader: basicVertShader,\r\n    fragmentShader: basicFragShader,\r\n    fog: true,\r\n    transparent: true,\r\n})\r\n\r\n\r\n\r\nexport { BasicShaderMat }"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,SAAS,EAAEC,cAAc,QAAQ,OAAO;AAE7E,MAAMC,eAAe,GAAG,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,eAAe,GAAG,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAGJ,SAAS,CAACK,MAAM;AAEpC,MAAMC,QAAQ,GAAGP,aAAa,CAACQ,KAAK,CAAC,CAACT,WAAW,CAAC,KAAK,CAAC,EAAEC,aAAa,CAACS,KAAK,CAACJ,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC;AACrGA,QAAQ,CAACG,KAAK,CAACC,KAAK,GAAG,GAAG;AAC1B,MAAMC,cAAc,GAAG,IAAIV,cAAc,CAAC;EACtCK,QAAQ,EAAEA,QAAQ;EAClBM,OAAO,EAAE;IACLC,mBAAmB,EAAE;EACzB,CAAC;EACDC,YAAY,EAAEZ,eAAe;EAC7Ba,cAAc,EAAEZ,eAAe;EAC/Ba,GAAG,EAAE,IAAI;EACTC,WAAW,EAAE;AACjB,CAAC,CAAC;AAIF,SAASN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}